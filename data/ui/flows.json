[
    {
        "id": "0ab19c4188bb8abf",
        "type": "tab",
        "label": "adsb decode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a434980c0d70073f",
        "type": "tab",
        "label": "map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eeaa68697bf28d0e",
        "type": "tab",
        "label": "dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c93dccbd18aefb14",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "65a0877e913c9221",
        "type": "ui_tab",
        "name": "Plane Spotter",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "5c701558e935be96",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#c0c0c0",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Plane Spotter",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8363fd07a79e8b50",
        "type": "ui_group",
        "name": "Map",
        "tab": "65a0877e913c9221",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0bcbeda61b5f475a",
        "type": "ui_group",
        "name": "Metrics",
        "tab": "65a0877e913c9221",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "83cc5c212ef6ab45",
        "type": "ui_group",
        "name": "Aircraft Info",
        "tab": "65a0877e913c9221",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "076ac2a7a4c50daf",
        "type": "mqtt in",
        "z": "0ab19c4188bb8abf",
        "name": "",
        "topic": "adsb",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c93dccbd18aefb14",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 320,
        "wires": [
            [
                "93082e13fd712414",
                "886a7f77b880419c"
            ]
        ]
    },
    {
        "id": "93082e13fd712414",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "-> buffer",
        "func": "const hex = msg.payload.replace(/[^0-9a-z]/gi,'');\nmsg.payload = hexArray.fromString(hex);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "hexArray",
                "module": "hex-array"
            }
        ],
        "x": 180,
        "y": 180,
        "wires": [
            [
                "7c9f184cc30d5d0f"
            ]
        ]
    },
    {
        "id": "7c9f184cc30d5d0f",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "decode",
        "func": "msg.payload = context.decoder.parse(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.decoder = new Decoder();",
        "finalize": "",
        "libs": [
            {
                "var": "Decoder",
                "module": "mode-s-decoder"
            }
        ],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "42c2da1c37e321db"
            ]
        ]
    },
    {
        "id": "3efb69c880ea5228",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "store",
        "func": "const store = context.get('store');\nstore.addMessage(msg.payload);\n\nconst aircraft = store.getAircrafts()\n\nreturn {\n    topic:'known_aircraft',\n    payload:aircraft\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('store', new AircraftStore({\n    timeout: 120000 // remove airplane from store if we haven't seen it for 2 minutes\n}))",
        "finalize": "",
        "libs": [
            {
                "var": "AircraftStore",
                "module": "mode-s-aircraft-store"
            }
        ],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "d0e7b1c68d266424"
            ]
        ]
    },
    {
        "id": "5334e3f99de6268b",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "aircraft db size",
        "func": "return {\n    topic: 'know_aircraft_count',\n    payload: msg.payload.length || 0\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "e1071538d8474f2d"
            ]
        ]
    },
    {
        "id": "e1071538d8474f2d",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "known aircraft count",
        "mode": "link",
        "links": [
            "0c2e1608f79c4d0f"
        ],
        "x": 895,
        "y": 100,
        "wires": []
    },
    {
        "id": "84b0f24d6e4770a4",
        "type": "split",
        "z": "0ab19c4188bb8abf",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "478573537a398f02"
            ]
        ]
    },
    {
        "id": "478573537a398f02",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "known aircraft",
        "mode": "link",
        "links": [
            "4404caecbde969ef"
        ],
        "x": 895,
        "y": 180,
        "wires": []
    },
    {
        "id": "d0e7b1c68d266424",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "mappable aircraft",
        "func": "const valid_aircraft = msg.payload.filter(el => el.lon != 0 &&  el.lat != 0);\nmsg.payload = valid_aircraft;\nreturn valid_aircraft.length > 0\n? msg\n: null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 180,
        "wires": [
            [
                "5334e3f99de6268b",
                "84b0f24d6e4770a4"
            ]
        ]
    },
    {
        "id": "1a5bbfc301fba6ea",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "crc error count",
        "func": "if(msg.topic == 'message_count'){\n    context.n = msg.payload;\n    return null;\n} else {\n    context.err += msg.payload.crcOk ? 0 : 1;\n    return {\n    topic: 'crc_error_rate',\n    payload: context.err/context.n\n};\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.n = 0;\ncontext.err = 0;",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "3288b2fd090ec8d6"
            ]
        ]
    },
    {
        "id": "3288b2fd090ec8d6",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "crc error count",
        "mode": "link",
        "links": [
            "4bdf1fb8f0def292"
        ],
        "x": 745,
        "y": 380,
        "wires": []
    },
    {
        "id": "886a7f77b880419c",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "msg count",
        "func": "context.n++;\nreturn {\n    topic: 'message_count',\n    payload: context.n\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.n = 0;",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 440,
        "wires": [
            [
                "be4cae98a85c1f15",
                "1a5bbfc301fba6ea"
            ]
        ]
    },
    {
        "id": "be4cae98a85c1f15",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "message count",
        "mode": "link",
        "links": [
            "cb4c763b28cf1390"
        ],
        "x": 745,
        "y": 440,
        "wires": []
    },
    {
        "id": "42c2da1c37e321db",
        "type": "switch",
        "z": "0ab19c4188bb8abf",
        "name": "check crc",
        "property": "payload.crcOk",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "3efb69c880ea5228"
            ],
            [
                "1a5bbfc301fba6ea"
            ]
        ]
    },
    {
        "id": "4404caecbde969ef",
        "type": "link in",
        "z": "a434980c0d70073f",
        "name": "link in 1",
        "links": [
            "478573537a398f02"
        ],
        "x": 165,
        "y": 80,
        "wires": [
            [
                "2d6155d8546da6cb"
            ]
        ]
    },
    {
        "id": "50e127837c345e61",
        "type": "worldmap",
        "z": "a434980c0d70073f",
        "name": "Plane Spotter",
        "lat": "39.98659",
        "lon": "-83.00171",
        "zoom": "10",
        "layer": "OSMG",
        "cluster": "9",
        "maxage": "60",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1120,
        "y": 260,
        "wires": []
    },
    {
        "id": "03565d1e34e0f066",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "prepare for mapping",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "$join(['ICAO', $string(payload.icao)],' ')",
                "tot": "jsonata"
            },
            {
                "t": "move",
                "p": "payload.lng",
                "pt": "msg",
                "to": "payload.lon",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "aircraft",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "plane",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.clickable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "d1bf963c0af13232"
            ]
        ]
    },
    {
        "id": "2d6155d8546da6cb",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "remove cruft",
        "rules": [
            {
                "t": "delete",
                "p": "payload._oddCprLat",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprLat",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._oddCprLng",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprLng",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._oddCprTime",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprTime",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 80,
        "wires": [
            [
                "03565d1e34e0f066"
            ]
        ]
    },
    {
        "id": "d1bf963c0af13232",
        "type": "switch",
        "z": "a434980c0d70073f",
        "name": "has callsign?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "bc502453312cb200"
            ],
            [
                "a7ed90fe34deafbd"
            ]
        ]
    },
    {
        "id": "bc502453312cb200",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "callsign -> label",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "blue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "472f03a94276dd04"
            ]
        ]
    },
    {
        "id": "a7ed90fe34deafbd",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "name -> label",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "arrow",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "slateblue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "50e127837c345e61"
            ]
        ]
    },
    {
        "id": "472f03a94276dd04",
        "type": "switch",
        "z": "a434980c0d70073f",
        "name": "is small craft?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^N",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "c5e3bc18fe33db62"
            ],
            [
                "50e127837c345e61"
            ]
        ]
    },
    {
        "id": "c5e3bc18fe33db62",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "small craft icon",
        "rules": [
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "smallplane",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 60,
        "wires": [
            [
                "50e127837c345e61"
            ]
        ]
    },
    {
        "id": "4bdf1fb8f0def292",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 2",
        "links": [
            "3288b2fd090ec8d6"
        ],
        "x": 775,
        "y": 60,
        "wires": [
            [
                "eda0e4b6bff127d0"
            ]
        ]
    },
    {
        "id": "eda0e4b6bff127d0",
        "type": "ui_gauge",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "group": "0bcbeda61b5f475a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Error Rate",
        "label": "",
        "format": " {{value*100 | number:1}}%",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 60,
        "wires": []
    },
    {
        "id": "19e42b65ee2aa91e",
        "type": "ui_worldmap",
        "z": "eeaa68697bf28d0e",
        "group": "8363fd07a79e8b50",
        "order": 1,
        "width": "20",
        "height": "15",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "ae4840f6511b4928",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "0bcbeda61b5f475a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mode-S Messages",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "cb4c763b28cf1390",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 3",
        "links": [
            "be4cae98a85c1f15"
        ],
        "x": 775,
        "y": 100,
        "wires": [
            [
                "ae4840f6511b4928"
            ]
        ]
    },
    {
        "id": "0c2e1608f79c4d0f",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 4",
        "links": [
            "e1071538d8474f2d"
        ],
        "x": 775,
        "y": 140,
        "wires": [
            [
                "734e60f7cae097f6"
            ]
        ]
    },
    {
        "id": "734e60f7cae097f6",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "0bcbeda61b5f475a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Known Aircraft",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 140,
        "wires": []
    },
    {
        "id": "0dc1e8ca7312ce60",
        "type": "worldmap in",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "path": "/worldmap",
        "events": "other",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "ce0fd7e38ded8131",
                "43b9a245fe6c88f2"
            ]
        ]
    },
    {
        "id": "ce0fd7e38ded8131",
        "type": "switch",
        "z": "eeaa68697bf28d0e",
        "name": "dispatch",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "click",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "93da4060c7bee384",
                "99df79504a875ac9",
                "52a2950be95e2eb9",
                "2cae26c9a779415d"
            ],
            []
        ]
    },
    {
        "id": "81adb75b2e44b854",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Ident",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload.ident}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "04c4d98c6460f45f",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Altitude",
        "format": "{{msg.payload.altitude | number:0}} {{msg.payload.altUnit}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 900,
        "y": 360,
        "wires": []
    },
    {
        "id": "b63bd2f3f2165dec",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Speed",
        "format": "{{msg.payload.speed | number:0}} {{msg.payload.spdUnit}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 400,
        "wires": []
    },
    {
        "id": "2cae26c9a779415d",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Heading",
        "format": "{{msg.payload.heading | number:2}}&deg;",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 640,
        "y": 400,
        "wires": []
    },
    {
        "id": "93da4060c7bee384",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Location",
        "format": "{{msg.payload.lat | number:4}}&deg;, {{msg.payload.lon | number:4}}&deg;",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "43b9a245fe6c88f2",
        "type": "debug",
        "z": "eeaa68697bf28d0e",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 500,
        "wires": []
    },
    {
        "id": "b646a87662d922b0",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "ident: callsign",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Callsign",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.ident",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 280,
        "wires": [
            [
                "81adb75b2e44b854"
            ]
        ]
    },
    {
        "id": "99df79504a875ac9",
        "type": "switch",
        "z": "eeaa68697bf28d0e",
        "name": "has callsign?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "b646a87662d922b0"
            ],
            [
                "678aca5328b8feae"
            ]
        ]
    },
    {
        "id": "678aca5328b8feae",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "ident: icao",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ICAO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.ident",
                "pt": "msg",
                "to": "payload.icao",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 320,
        "wires": [
            [
                "81adb75b2e44b854"
            ]
        ]
    },
    {
        "id": "52a2950be95e2eb9",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "prep unit labels",
        "rules": [
            {
                "t": "set",
                "p": "payload.altUnit",
                "pt": "msg",
                "to": "payload.unit = 0 ? 'ft' : 'm'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.spdUnit",
                "pt": "msg",
                "to": "payload.unit=0?'m/h':'kph'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "04c4d98c6460f45f",
                "b63bd2f3f2165dec"
            ]
        ]
    },
    {
        "id": "07fdafd0e52b3b0f",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "0bcbeda61b5f475a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload | date}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "2efdc49e383f081b",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "uptime",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "42d901469fe120d1"
            ]
        ]
    },
    {
        "id": "42d901469fe120d1",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "calc uptime",
        "func": "let uptime = Math.floor(Math.abs(context.startTime-msg.payload)/1000); // total seconds\nconst r = {};\nconst rstrings = []\nconst s = {                \n    day: 86400,   // feel free to add your own row\n    hour: 3600,\n    minute: 60,\n    second: 1\n};\n\nObject.keys(s).forEach(function (key) {\n    r[key] = Math.floor(uptime / s[key]);\n    uptime -= r[key] * s[key];\n    rstrings.push(r[key].toString().padStart(2,'0'));\n});\n\n\nmsg.payload = rstrings.join(':');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.startTime=Date.now()",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 180,
        "wires": [
            [
                "07fdafd0e52b3b0f"
            ]
        ]
    }
]