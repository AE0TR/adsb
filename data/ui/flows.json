[
    {
        "id": "9e95f962de164512",
        "type": "tab",
        "label": "ads-b msgs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ab19c4188bb8abf",
        "type": "tab",
        "label": "adsb decode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a434980c0d70073f",
        "type": "tab",
        "label": "map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eeaa68697bf28d0e",
        "type": "tab",
        "label": "dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65a0877e913c9221",
        "type": "ui_tab",
        "name": "Plane Spotter",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "5c701558e935be96",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#408080",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#408080",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#408080",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#5eaeae",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#408080",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Plane Spotter",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8363fd07a79e8b50",
        "type": "ui_group",
        "name": "Map",
        "tab": "65a0877e913c9221",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0bcbeda61b5f475a",
        "type": "ui_group",
        "name": "Guages",
        "tab": "65a0877e913c9221",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "83cc5c212ef6ab45",
        "type": "ui_group",
        "name": "Aircraft Info",
        "tab": "65a0877e913c9221",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3228a8420605aa56",
        "type": "ui_group",
        "name": "Controls",
        "tab": "65a0877e913c9221",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0b3d097e2c8d6ea",
        "type": "ui_group",
        "name": "Metrics",
        "tab": "65a0877e913c9221",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "588033b17ea14826",
        "type": "switch",
        "z": "9e95f962de164512",
        "name": "filter empty",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "242767047fb00157"
            ]
        ]
    },
    {
        "id": "75add9c290caddd8",
        "type": "split",
        "z": "9e95f962de164512",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "588033b17ea14826"
            ]
        ]
    },
    {
        "id": "10344d3a3ee714ea",
        "type": "tcp in",
        "z": "9e95f962de164512",
        "name": "Raw",
        "server": "client",
        "host": "sdr",
        "port": "30002",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "raw-msgs",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "75add9c290caddd8"
            ]
        ]
    },
    {
        "id": "41ce176d05e4819e",
        "type": "tcp in",
        "z": "9e95f962de164512",
        "name": "Mode S",
        "server": "client",
        "host": "sdr",
        "port": "30003",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "mode-s-msgs",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "75add9c290caddd8"
            ]
        ]
    },
    {
        "id": "242767047fb00157",
        "type": "switch",
        "z": "9e95f962de164512",
        "name": "msg type",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "raw-msgs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-s-msgs",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 220,
        "wires": [
            [
                "fadb63b83a4a3415"
            ],
            [
                "dad7659d40351dd3"
            ]
        ]
    },
    {
        "id": "fadb63b83a4a3415",
        "type": "link out",
        "z": "9e95f962de164512",
        "name": "adsb-raw",
        "mode": "link",
        "links": [
            "07032f4aa40988f7"
        ],
        "x": 805,
        "y": 160,
        "wires": []
    },
    {
        "id": "dad7659d40351dd3",
        "type": "link out",
        "z": "9e95f962de164512",
        "name": "adsb-mode-s",
        "mode": "link",
        "links": [],
        "x": 805,
        "y": 280,
        "wires": []
    },
    {
        "id": "93082e13fd712414",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "-> buffer",
        "func": "const hex = msg.payload.replace(/[^0-9a-z]/gi,'');\nmsg.payload = hexArray.fromString(hex);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "hexArray",
                "module": "hex-array"
            }
        ],
        "x": 220,
        "y": 80,
        "wires": [
            [
                "7c9f184cc30d5d0f"
            ]
        ]
    },
    {
        "id": "7c9f184cc30d5d0f",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "decode",
        "func": "msg.payload = context.decoder.parse(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.decoder = new Decoder();",
        "finalize": "",
        "libs": [
            {
                "var": "Decoder",
                "module": "mode-s-decoder"
            }
        ],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "4b19c9f4d5a76294"
            ]
        ]
    },
    {
        "id": "3efb69c880ea5228",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "store",
        "func": "const store = global.get('store');\nstore.addMessage(msg.payload);\n\nconst aircraft = store.getAircrafts()\n\nreturn {\n    topic:'known_aircraft',\n    payload:aircraft\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set('store', new AircraftStore({\n    timeout: 120000 // remove airplane from store if we haven't seen it for 2 minutes\n}))",
        "finalize": "",
        "libs": [
            {
                "var": "AircraftStore",
                "module": "mode-s-aircraft-store"
            }
        ],
        "x": 770,
        "y": 100,
        "wires": [
            [
                "d0e7b1c68d266424"
            ]
        ]
    },
    {
        "id": "5334e3f99de6268b",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "aircraft db size",
        "func": "return {\n    topic: 'know_aircraft_count',\n    payload: msg.payload.length || 0\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 220,
        "wires": [
            [
                "e1071538d8474f2d"
            ]
        ]
    },
    {
        "id": "e1071538d8474f2d",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "known aircraft count",
        "mode": "link",
        "links": [
            "0c2e1608f79c4d0f"
        ],
        "x": 1265,
        "y": 220,
        "wires": []
    },
    {
        "id": "84b0f24d6e4770a4",
        "type": "split",
        "z": "0ab19c4188bb8abf",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1130,
        "y": 100,
        "wires": [
            [
                "478573537a398f02"
            ]
        ]
    },
    {
        "id": "478573537a398f02",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "known aircraft",
        "mode": "link",
        "links": [
            "4404caecbde969ef"
        ],
        "x": 1265,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0e7b1c68d266424",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "mappable aircraft",
        "func": "const valid_aircraft = msg.payload.filter(el => el.lng != 0 &&  el.lat != 0);\nmsg.payload = valid_aircraft;\nreturn valid_aircraft.length > 0\n? msg\n: null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 100,
        "wires": [
            [
                "5334e3f99de6268b",
                "84b0f24d6e4770a4"
            ]
        ]
    },
    {
        "id": "1a5bbfc301fba6ea",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "err count",
        "func": "const n = context.get('n');\ncontext.set('n', n+1);\n\nreturn {\n    topic:'err_count',\n    payload: n \n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('n', 0)",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "3288b2fd090ec8d6"
            ]
        ]
    },
    {
        "id": "3288b2fd090ec8d6",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "err count",
        "mode": "link",
        "links": [
            "cb4c763b28cf1390"
        ],
        "x": 1265,
        "y": 400,
        "wires": []
    },
    {
        "id": "886a7f77b880419c",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "msg count",
        "func": "context.n++;\nreturn {\n    topic: 'message_count',\n    payload: context.n\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.n = 0;",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 460,
        "wires": [
            [
                "be4cae98a85c1f15"
            ]
        ]
    },
    {
        "id": "be4cae98a85c1f15",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "msg count",
        "mode": "link",
        "links": [
            "af1e62fb40787fa9"
        ],
        "x": 1265,
        "y": 460,
        "wires": []
    },
    {
        "id": "42c2da1c37e321db",
        "type": "switch",
        "z": "0ab19c4188bb8abf",
        "name": "check crc",
        "property": "payload.crcOk",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "3efb69c880ea5228",
                "ae53edfbc02021d4"
            ],
            [
                "1a5bbfc301fba6ea",
                "b086f0f22c5cb8f9"
            ]
        ]
    },
    {
        "id": "ae53edfbc02021d4",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "decode / sec",
        "func": "const secs = (Date.now() - context.get('start'))/1000;\nconst n = context.get('n');\ncontext.set('n', n+1);\n\nreturn {\n    topic:'decodes_per_sec',\n    payload: n / secs\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('start', Date.now())\ncontext.set('n', 0)",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "33bbecff477a033c"
            ]
        ]
    },
    {
        "id": "b086f0f22c5cb8f9",
        "type": "function",
        "z": "0ab19c4188bb8abf",
        "name": "err / sec",
        "func": "const secs = (Date.now() - context.get('start'))/1000;\nconst n = context.get('n');\ncontext.set('n', n+1);\n\nreturn {\n    topic:'errors_per_sec',\n    payload: n / secs\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('start', Date.now())\ncontext.set('n', 0)",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "7debf716e0ea5847"
            ]
        ]
    },
    {
        "id": "33bbecff477a033c",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "decode per sec",
        "mode": "link",
        "links": [
            "4bdf1fb8f0def292"
        ],
        "x": 1265,
        "y": 280,
        "wires": []
    },
    {
        "id": "7debf716e0ea5847",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "err per sec",
        "mode": "link",
        "links": [
            "c7c6d3a54ce1c3e2"
        ],
        "x": 1265,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b19c9f4d5a76294",
        "type": "change",
        "z": "0ab19c4188bb8abf",
        "name": "adsb-decoded",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "adsb-decoded",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "42c2da1c37e321db",
                "31cae8120cd91bf2"
            ]
        ]
    },
    {
        "id": "07032f4aa40988f7",
        "type": "link in",
        "z": "0ab19c4188bb8abf",
        "name": "link in 8",
        "links": [
            "fadb63b83a4a3415"
        ],
        "x": 195,
        "y": 220,
        "wires": [
            [
                "93082e13fd712414",
                "886a7f77b880419c"
            ]
        ]
    },
    {
        "id": "31cae8120cd91bf2",
        "type": "link out",
        "z": "0ab19c4188bb8abf",
        "name": "adsb-decoded",
        "mode": "link",
        "links": [],
        "x": 745,
        "y": 40,
        "wires": []
    },
    {
        "id": "4404caecbde969ef",
        "type": "link in",
        "z": "a434980c0d70073f",
        "name": "link in 1",
        "links": [
            "478573537a398f02"
        ],
        "x": 165,
        "y": 80,
        "wires": [
            [
                "2d6155d8546da6cb"
            ]
        ]
    },
    {
        "id": "03565d1e34e0f066",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "prepare for mapping",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.icao",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.lng",
                "pt": "msg",
                "to": "payload.lon",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "plane",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.clickable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "aircraft",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "d1bf963c0af13232"
            ]
        ]
    },
    {
        "id": "2d6155d8546da6cb",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "remove cruft",
        "rules": [
            {
                "t": "delete",
                "p": "payload._oddCprLat",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprLat",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._oddCprLng",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprLng",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._oddCprTime",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._evenCprTime",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 80,
        "wires": [
            [
                "03565d1e34e0f066"
            ]
        ]
    },
    {
        "id": "d1bf963c0af13232",
        "type": "switch",
        "z": "a434980c0d70073f",
        "name": "has callsign?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "bc502453312cb200"
            ],
            [
                "a7ed90fe34deafbd"
            ]
        ]
    },
    {
        "id": "bc502453312cb200",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "callsign -> label",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "blue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "472f03a94276dd04"
            ]
        ]
    },
    {
        "id": "a7ed90fe34deafbd",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "name -> label",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "$join(['ICAO', $string(payload.icao)],' ')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "arrow",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "slateblue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "19e42b65ee2aa91e"
            ]
        ]
    },
    {
        "id": "472f03a94276dd04",
        "type": "switch",
        "z": "a434980c0d70073f",
        "name": "is small craft?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^N",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "c5e3bc18fe33db62"
            ],
            [
                "19e42b65ee2aa91e"
            ]
        ]
    },
    {
        "id": "c5e3bc18fe33db62",
        "type": "change",
        "z": "a434980c0d70073f",
        "name": "small craft icon",
        "rules": [
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "smallplane",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "19e42b65ee2aa91e"
            ]
        ]
    },
    {
        "id": "19e42b65ee2aa91e",
        "type": "ui_worldmap",
        "z": "a434980c0d70073f",
        "group": "8363fd07a79e8b50",
        "order": 1,
        "width": "20",
        "height": "15",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "10",
        "layer": "OSMC",
        "cluster": "8",
        "maxage": "120",
        "usermenu": "hide",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "AC,HM",
        "maplist": "OSMC,EsriC,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "bc940bbd8afbab5b",
        "type": "link in",
        "z": "a434980c0d70073f",
        "name": "link in 5",
        "links": [
            "f9311951a9a04be5"
        ],
        "x": 875,
        "y": 340,
        "wires": [
            [
                "19e42b65ee2aa91e"
            ]
        ]
    },
    {
        "id": "4bdf1fb8f0def292",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 2",
        "links": [
            "33bbecff477a033c"
        ],
        "x": 875,
        "y": 120,
        "wires": [
            [
                "eda0e4b6bff127d0"
            ]
        ]
    },
    {
        "id": "eda0e4b6bff127d0",
        "type": "ui_gauge",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "group": "0bcbeda61b5f475a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Decode / Sec",
        "label": "",
        "format": " {{value | number:2}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ae4840f6511b4928",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "a0b3d097e2c8d6ea",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ADS-B Errors",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "cb4c763b28cf1390",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 3",
        "links": [
            "3288b2fd090ec8d6"
        ],
        "x": 375,
        "y": 160,
        "wires": [
            [
                "ae4840f6511b4928"
            ]
        ]
    },
    {
        "id": "0c2e1608f79c4d0f",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 4",
        "links": [
            "e1071538d8474f2d"
        ],
        "x": 375,
        "y": 200,
        "wires": [
            [
                "734e60f7cae097f6"
            ]
        ]
    },
    {
        "id": "734e60f7cae097f6",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "a0b3d097e2c8d6ea",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Known Aircraft",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "0dc1e8ca7312ce60",
        "type": "worldmap in",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "path": "/worldmap",
        "events": "connect,bounds,other",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "ce0fd7e38ded8131"
            ]
        ]
    },
    {
        "id": "ce0fd7e38ded8131",
        "type": "switch",
        "z": "eeaa68697bf28d0e",
        "name": "dispatch",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bounds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "93da4060c7bee384",
                "99df79504a875ac9",
                "52a2950be95e2eb9",
                "2cae26c9a779415d"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "81adb75b2e44b854",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Ident",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload.ident}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 420,
        "wires": []
    },
    {
        "id": "04c4d98c6460f45f",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Altitude",
        "format": "{{msg.payload.altitude | number:0}} {{msg.payload.altUnit}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1020,
        "y": 480,
        "wires": []
    },
    {
        "id": "b63bd2f3f2165dec",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Speed",
        "format": "{{msg.payload.speed | number:0}} {{msg.payload.spdUnit}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "2cae26c9a779415d",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Heading",
        "format": "{{msg.payload.heading | number:0}}&deg;",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 760,
        "y": 520,
        "wires": []
    },
    {
        "id": "93da4060c7bee384",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "83cc5c212ef6ab45",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Location",
        "format": "{{msg.payload.lat | number:4}}&deg;, {{msg.payload.lon | number:4}}&deg;",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 760,
        "y": 560,
        "wires": []
    },
    {
        "id": "b646a87662d922b0",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "ident: callsign",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Callsign",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.ident",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 400,
        "wires": [
            [
                "81adb75b2e44b854"
            ]
        ]
    },
    {
        "id": "99df79504a875ac9",
        "type": "switch",
        "z": "eeaa68697bf28d0e",
        "name": "has callsign?",
        "property": "payload.callsign",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "b646a87662d922b0"
            ],
            [
                "678aca5328b8feae"
            ]
        ]
    },
    {
        "id": "678aca5328b8feae",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "ident: icao",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ICAO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.ident",
                "pt": "msg",
                "to": "payload.icao",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 440,
        "wires": [
            [
                "81adb75b2e44b854"
            ]
        ]
    },
    {
        "id": "52a2950be95e2eb9",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "prep unit labels",
        "rules": [
            {
                "t": "set",
                "p": "payload.altUnit",
                "pt": "msg",
                "to": "payload.unit = 0 ? 'ft' : 'm'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.spdUnit",
                "pt": "msg",
                "to": "payload.unit=0?'kt':'kph'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 480,
        "wires": [
            [
                "04c4d98c6460f45f",
                "b63bd2f3f2165dec"
            ]
        ]
    },
    {
        "id": "07fdafd0e52b3b0f",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "a0b3d097e2c8d6ea",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "2efdc49e383f081b",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "uptime",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "42d901469fe120d1"
            ]
        ]
    },
    {
        "id": "42d901469fe120d1",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "calc uptime",
        "func": "let uptime = Math.floor(Math.abs(context.startTime-msg.payload)/1000); // total seconds\nconst r = {};\nconst rstrings = []\nconst s = {                \n    day: 86400,   // feel free to add your own row\n    hour: 3600,\n    minute: 60,\n    second: 1\n};\n\nObject.keys(s).forEach(function (key) {\n    r[key] = Math.floor(uptime / s[key]);\n    uptime -= r[key] * s[key];\n    rstrings.push(r[key].toString().padStart(2,'0'));\n});\n\n\nmsg.payload = rstrings.join(' : ');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.startTime=Date.now()",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "07fdafd0e52b3b0f"
            ]
        ]
    },
    {
        "id": "d2eab30fd054ac34",
        "type": "ui_button",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "group": "3228a8420605aa56",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Fit All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "fit_all",
        "payloadType": "str",
        "topic": "action",
        "topicType": "msg",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "52bc29f2123c4d15"
            ]
        ]
    },
    {
        "id": "52bc29f2123c4d15",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "bounds",
        "func": "const store = global.get('store');\nlet points = store.getAircrafts().map(el => ({ lat: el.lat, lon: el.lng }));\npoints = points.filter(el => el.lat != 0 && el.lon != 0);\n\nif (points.length == 0) {\n    return null;\n}\n\nconst delta = 0.001;\n\nconst minLat = Math.min(...points.map(el => el.lat)) *(1-delta);\nconst maxLat = Math.max(...points.map(el => el.lat)) * (1 + delta);\nconst minLon = Math.min(...points.map(el => el.lon)) * (1 + delta);\nconst maxLon = Math.max(...points.map(el => el.lon)) * (1 - delta);\n\nconst bounds = { payload: { command: { bounds: [[minLat, minLon], [maxLat, maxLon]] } } }\n\nif (points.length == 1) {\n    const zoom = { payload: { command: { zoom: 10 } } };\n    return [[bounds, zoom]]\n} else {\n    return bounds\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 780,
        "wires": [
            [
                "f9311951a9a04be5"
            ]
        ]
    },
    {
        "id": "82fbf8c00897b09e",
        "type": "comment",
        "z": "eeaa68697bf28d0e",
        "name": "Metrics",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "0c0fd2bde7be23a5",
        "type": "comment",
        "z": "eeaa68697bf28d0e",
        "name": "Aircraft Information",
        "info": "",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "8917f2aad0eb4149",
        "type": "comment",
        "z": "eeaa68697bf28d0e",
        "name": "Controls",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "f9311951a9a04be5",
        "type": "link out",
        "z": "eeaa68697bf28d0e",
        "name": "map commands",
        "mode": "link",
        "links": [
            "bc940bbd8afbab5b"
        ],
        "x": 495,
        "y": 800,
        "wires": []
    },
    {
        "id": "5b3891526cec8c79",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "center",
        "func": "const store = global.get('store');\nlet points = store.getAircrafts().map(el => ({ lat: el.lat, lon: el.lng }));\npoints = points.filter(el => el.lat != 0 && el.lon != 0);\n\nif (points.length == 0) {\n    return null;\n}\n\nlet center = {lat:0,lon:0};\ncenter = points.reduce((partial, el) => ({ lat: partial.lat + el.lat, lon: partial.lon +el.lon}),center) \ncenter ={\n    lat: center.lat / points.length,\n    lon: center.lon / points.length\n}\n\nreturn {\n    payload:{command:center}\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 660,
        "wires": [
            [
                "f9311951a9a04be5"
            ]
        ]
    },
    {
        "id": "a98a126d2de34f20",
        "type": "ui_button",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "group": "3228a8420605aa56",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Center",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "5b3891526cec8c79"
            ]
        ]
    },
    {
        "id": "c1b2bc4d47db5725",
        "type": "ui_switch",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "label": "Auto Fit",
        "tooltip": "",
        "group": "3228a8420605aa56",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "fit",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 300,
        "y": 940,
        "wires": [
            [
                "db5767dfae455dab",
                "cce2eb61dbc59c5e"
            ]
        ]
    },
    {
        "id": "15ae9d8552d9d98f",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "a1db66bf46cf53ec"
            ]
        ]
    },
    {
        "id": "86105341135c3ae2",
        "type": "ui_slider",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "label": "Auto Fit Timeout",
        "tooltip": "",
        "group": "3228a8420605aa56",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "timeout",
        "topicType": "msg",
        "min": "0",
        "max": "60",
        "step": "5",
        "className": "",
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "b7daaba1d29fc4fe"
            ]
        ]
    },
    {
        "id": "7b348ed00fc51d24",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "86105341135c3ae2"
            ]
        ]
    },
    {
        "id": "db5767dfae455dab",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "set auto fit",
        "func": "flow.set('autofit', msg.payload);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b7daaba1d29fc4fe",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "set auto fit timeout",
        "func": "flow.set('autofittimeout', msg.payload);\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "43dabf02b9106e65",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "c1b2bc4d47db5725"
            ]
        ]
    },
    {
        "id": "a1db66bf46cf53ec",
        "type": "function",
        "z": "eeaa68697bf28d0e",
        "name": "activate",
        "func": "const autofit = flow.get('autofit');\nconst timeout = flow.get('autofittimeout') * 1000;\nconst lastseen = context.get('lastseen') || msg.payload;\n\nif (autofit && msg.payload > lastseen + timeout){\n    context.set('lastseen', msg.payload);\n    return msg;\n} else{\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastseen',Date.now());",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 720,
        "wires": [
            [
                "52bc29f2123c4d15"
            ]
        ]
    },
    {
        "id": "cce2eb61dbc59c5e",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "disable button",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "$not(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 860,
        "wires": [
            [
                "d2eab30fd054ac34"
            ]
        ]
    },
    {
        "id": "c7c6d3a54ce1c3e2",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 6",
        "links": [
            "7debf716e0ea5847"
        ],
        "x": 875,
        "y": 160,
        "wires": [
            [
                "267a0ba514d8b86d"
            ]
        ]
    },
    {
        "id": "267a0ba514d8b86d",
        "type": "ui_gauge",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "group": "0bcbeda61b5f475a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Err / Sec",
        "label": "",
        "format": " {{value | number:2}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1120,
        "y": 160,
        "wires": []
    },
    {
        "id": "9243ed242d015921",
        "type": "ui_text",
        "z": "eeaa68697bf28d0e",
        "group": "a0b3d097e2c8d6ea",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ADS-B Messages",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "af1e62fb40787fa9",
        "type": "link in",
        "z": "eeaa68697bf28d0e",
        "name": "link in 7",
        "links": [
            "be4cae98a85c1f15"
        ],
        "x": 375,
        "y": 120,
        "wires": [
            [
                "9243ed242d015921"
            ]
        ]
    },
    {
        "id": "d86d385f04b17b6b",
        "type": "ui_slider",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "label": "Range",
        "tooltip": "",
        "group": "0bcbeda61b5f475a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 850,
        "y": 260,
        "wires": [
            [
                "d940838b3e4ae373"
            ]
        ]
    },
    {
        "id": "d940838b3e4ae373",
        "type": "change",
        "z": "eeaa68697bf28d0e",
        "name": "make ui ctl msg",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"max\":payload }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 200,
        "wires": [
            [
                "267a0ba514d8b86d",
                "eda0e4b6bff127d0"
            ]
        ]
    },
    {
        "id": "aed4add817977adc",
        "type": "inject",
        "z": "eeaa68697bf28d0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "d86d385f04b17b6b"
            ]
        ]
    }
]