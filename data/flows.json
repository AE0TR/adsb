[
    {
        "id": "4f19d12f.1e2c4",
        "type": "tab",
        "label": "Rx",
        "disabled": false,
        "info": ""
    },
    {
        "id": "96e62eeb.e7c3d",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#3f4aa2",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#3f4aa2",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6973c5",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#3f4aa2",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Local Flight Track",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f18730a5.cb179",
        "type": "tcp in",
        "z": "4f19d12f.1e2c4",
        "name": "",
        "server": "client",
        "host": "recv",
        "port": "30003",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "\\n",
        "topic": "",
        "base64": false,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "bd3e632b.fd2f3"
            ]
        ]
    },
    {
        "id": "bd3e632b.fd2f3",
        "type": "npm",
        "z": "4f19d12f.1e2c4",
        "name": "sbs1 decoder",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1-compat",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "99cfcf6c.0ccf5"
            ]
        ],
        "outputLabels": [
            "decoded ads-b messages"
        ]
    },
    {
        "id": "99cfcf6c.0ccf5",
        "type": "switch",
        "z": "4f19d12f.1e2c4",
        "name": "msg_type router",
        "property": "payload.message_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SEL",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ID",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AIR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 580,
        "y": 100,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "68027129.5197d"
            ]
        ],
        "outputLabels": [
            "SELECTION CHANGE MESSAGE",
            " NEW ID MESSAGE",
            " NEW AIRCRAFT MESSAGE",
            "STATUS CHANGE MESSAGE",
            " CLICK MESSAGE",
            " TRANSMISSION MESSAGE"
        ]
    },
    {
        "id": "68027129.5197d",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "sbs1 -> aircraft rec",
        "func": "\nconst fns = [\n    props => ({icao: props.hex_ident}),\n    props => ({call_sign: props.flight_id ? props.flight_id.trim() : null}),\n    props => ({timestamp: Date.parse(props.logged_date + \" \" + props.logged_time)}),\n    props => ({altitude: props.altitude}),\n    props => ({speed: props.ground_speed}),\n    props => ({heading: props.track}),\n    props => ({lat: props.lat}),\n    props => ({lon: props.lon}),\n    props => ({vertical_rate: props.vertical_rate})\n];\n\nmsg.payload = fns.map(f => f.call(this, msg.payload))\n.reduce((a, c) => Object.assign(a,c), {});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 180,
        "wires": [
            [
                "6f6dc359.91c2ac"
            ]
        ]
    },
    {
        "id": "6f6dc359.91c2ac",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "filter out icao: \"000000\"",
        "func": "if(msg.payload.icao === \"000000\"){\n    node.done();\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "129b5ede.303509"
            ]
        ]
    },
    {
        "id": "d05426b5.b33bb",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "save",
        "func": "flow.set(msg.payload.icao, msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 320,
        "wires": [
            [
                "2051fd60.4dbaca"
            ]
        ]
    },
    {
        "id": "129b5ede.303509",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "merge",
        "func": "msg.payload = Object.entries(msg.payload)\n.filter(kvp => kvp[1])\n.map(kvp => ({[kvp[0]]: kvp[1]}))\n.reduce((acc, cur) => Object.assign(acc, cur), flow.get(msg.payload.icao) || {})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 320,
        "wires": [
            [
                "d05426b5.b33bb"
            ]
        ]
    },
    {
        "id": "2051fd60.4dbaca",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "clone payload",
        "func": "msg.payload = Object.assign({}, msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "678cd28f.f5b44c"
            ]
        ]
    },
    {
        "id": "4c39c65d.abb6a8",
        "type": "comment",
        "z": "4f19d12f.1e2c4",
        "name": "Source the output of the SDR and parse",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "cd9a5af.75dfba8",
        "type": "comment",
        "z": "4f19d12f.1e2c4",
        "name": "Update the db of known aircraft.",
        "info": "",
        "x": 170,
        "y": 260,
        "wires": []
    },
    {
        "id": "9708fe26.3c39e8",
        "type": "comment",
        "z": "4f19d12f.1e2c4",
        "name": "Create marker options for Leaflet",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "6a242c8.592e654",
        "type": "uibuilder",
        "z": "4f19d12f.1e2c4",
        "name": "",
        "topic": "aircraft",
        "url": "flights",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "showfolder": false,
        "useSecurity": false,
        "sessionLength": 432000,
        "tokenAutoExtend": false,
        "reload": false,
        "x": 630,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "82a8a5a0.3296c8",
        "type": "inject",
        "z": "4f19d12f.1e2c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "bcb48a83.6ebcd"
            ]
        ]
    },
    {
        "id": "bcb48a83.6ebcd",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "clear the aircraft database",
        "func": "flow.keys().forEach(k => flow.set(k, undefined))\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "13095b58.9d227d",
        "type": "comment",
        "z": "4f19d12f.1e2c4",
        "name": "Utilities",
        "info": "",
        "x": 90,
        "y": 580,
        "wires": []
    },
    {
        "id": "678cd28f.f5b44c",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "create marker",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 460,
        "wires": [
            [
                "6a242c8.592e654"
            ]
        ]
    }
]