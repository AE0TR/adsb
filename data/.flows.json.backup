[
    {
        "id": "4f19d12f.1e2c4",
        "type": "tab",
        "label": "ADS-B Receiver",
        "disabled": false,
        "info": ""
    },
    {
        "id": "440cd06f.70f26",
        "type": "tab",
        "label": "UI - Flight map",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b89551a1.981bf",
        "type": "tab",
        "label": "UI - Flight table",
        "disabled": false,
        "info": ""
    },
    {
        "id": "96e62eeb.e7c3d",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#3f4aa2",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "ADS-B Receiver",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "450a7cc0.2f87b4",
        "type": "ui_group",
        "name": "map",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "22",
        "collapse": false
    },
    {
        "id": "609281d3.d0f6",
        "type": "ui_tab",
        "name": "Aircraft Data",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "14cb61d4.9d5d3e",
        "type": "ui_group",
        "name": "table",
        "tab": "609281d3.d0f6",
        "order": 1,
        "disp": false,
        "width": "11",
        "collapse": false
    },
    {
        "id": "9df62712.4fec98",
        "type": "ui_tab",
        "name": "Flight Map",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b7c4863.ef4c878",
        "type": "ui_group",
        "name": "map",
        "tab": "9df62712.4fec98",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false
    },
    {
        "id": "87e7d73f.58b988",
        "type": "ui_group",
        "name": "controls",
        "tab": "9df62712.4fec98",
        "order": 2,
        "disp": false,
        "width": "2",
        "collapse": false
    },
    {
        "id": "f18730a5.cb179",
        "type": "tcp in",
        "z": "4f19d12f.1e2c4",
        "name": "",
        "server": "client",
        "host": "recv",
        "port": "30003",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "\\n",
        "topic": "",
        "base64": false,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "bd3e632b.fd2f3"
            ]
        ]
    },
    {
        "id": "bd3e632b.fd2f3",
        "type": "npm",
        "z": "4f19d12f.1e2c4",
        "name": "sbs1 decoder",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);",
        "npm_module": "sbs1-compat",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "parseSbs1Message",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "99cfcf6c.0ccf5"
            ]
        ],
        "outputLabels": [
            "decoded ads-b messages"
        ]
    },
    {
        "id": "7de6f7c3.2417a8",
        "type": "link out",
        "z": "4f19d12f.1e2c4",
        "name": "aircraft messages",
        "links": [
            "17438f18.aa3ae1",
            "5e748ed5.52e88"
        ],
        "x": 635,
        "y": 400,
        "wires": []
    },
    {
        "id": "b1a21177.4703",
        "type": "function",
        "z": "b89551a1.981bf",
        "name": "create add/update cmd",
        "func": "const row = Object.assign({}, msg.payload);\nmsg.payload = {\n    \"command\": \"updateOrAddData\",\n    \"arguments\": [[row ]],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 120,
        "wires": [
            [
                "c248f2d7.1bbfc"
            ]
        ]
    },
    {
        "id": "99cfcf6c.0ccf5",
        "type": "switch",
        "z": "4f19d12f.1e2c4",
        "name": "msg_type router",
        "property": "payload.message_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SEL",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ID",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AIR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 580,
        "y": 60,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "6b2eb604.61d508"
            ]
        ],
        "outputLabels": [
            "SELECTION CHANGE MESSAGE",
            " NEW ID MESSAGE",
            " NEW AIRCRAFT MESSAGE",
            "STATUS CHANGE MESSAGE",
            " CLICK MESSAGE",
            " TRANSMISSION MESSAGE"
        ]
    },
    {
        "id": "baea63fe.7a25c",
        "type": "link in",
        "z": "b89551a1.981bf",
        "name": "pruned aircraft reader",
        "links": [
            "eafb3b18.54a508"
        ],
        "x": 175,
        "y": 200,
        "wires": [
            [
                "32e18b0e.bfc5e4"
            ]
        ]
    },
    {
        "id": "32e18b0e.bfc5e4",
        "type": "function",
        "z": "b89551a1.981bf",
        "name": "clone payload",
        "func": "msg.payload = Object.assign({}, msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 200,
        "wires": [
            [
                "3748a8ed.bbccb8"
            ]
        ]
    },
    {
        "id": "3748a8ed.bbccb8",
        "type": "change",
        "z": "b89551a1.981bf",
        "name": "set table props",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.hex_ident",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "msg.payload.flight_id \t? msg.payload.flight_id \t: msg.payload.hex_ident",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "6c48c90d.d44648"
            ]
        ]
    },
    {
        "id": "6c48c90d.d44648",
        "type": "function",
        "z": "b89551a1.981bf",
        "name": "create delete cmd",
        "func": "msg.payload={\n    command:\"deleteRow\",\n    arguments: [msg.payload.hex_ident],\n    returnPromise: true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 360,
        "wires": [
            [
                "c248f2d7.1bbfc"
            ]
        ]
    },
    {
        "id": "17438f18.aa3ae1",
        "type": "link in",
        "z": "b89551a1.981bf",
        "name": "aircraft reader",
        "links": [
            "e38f79f9.9bcf28",
            "7de6f7c3.2417a8"
        ],
        "x": 175,
        "y": 40,
        "wires": [
            [
                "badd9d1f.6f9b"
            ]
        ]
    },
    {
        "id": "badd9d1f.6f9b",
        "type": "change",
        "z": "b89551a1.981bf",
        "name": "set table props",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.hex_ident",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "msg.payload.flight_id \t? msg.payload.flight_id \t: msg.payload.hex_ident",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 40,
        "wires": [
            [
                "b1a21177.4703"
            ]
        ]
    },
    {
        "id": "834e8281.fc9e2",
        "type": "change",
        "z": "440cd06f.70f26",
        "name": "set map props",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.hex_ident",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.tooltip",
                "pt": "msg",
                "to": "msg.payload.flight_id ? msg.payload.flight_id : msg.payload.hex_ident",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "msg.payload.vertical_rate  < -100 ? \"red\" : msg.payload.vertical_rate > 100 ? \"green\" : \"black\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "plane",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.heading",
                "pt": "msg",
                "to": "payload.track",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.speed",
                "pt": "msg",
                "to": "payload.ground_speed",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "aircraft",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "f71fd6b4.bf26c8"
            ]
        ]
    },
    {
        "id": "5e748ed5.52e88",
        "type": "link in",
        "z": "440cd06f.70f26",
        "name": "aircraft reader",
        "links": [
            "e38f79f9.9bcf28",
            "7de6f7c3.2417a8"
        ],
        "x": 95,
        "y": 80,
        "wires": [
            [
                "834e8281.fc9e2"
            ]
        ]
    },
    {
        "id": "c248f2d7.1bbfc",
        "type": "ui_table",
        "z": "b89551a1.981bf",
        "group": "14cb61d4.9d5d3e",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 740,
        "y": 240,
        "wires": []
    },
    {
        "id": "e1c8d108.0f526",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "000000 filter",
        "func": "\nreturn msg.payload.hex_ident === \"000000\" ? null :msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "32a64cec.6fdd74"
            ]
        ]
    },
    {
        "id": "6b2eb604.61d508",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "sbs1 -> aircraft",
        "func": "\nconst fns = [\n    props => ({hex_ident: props.hex_ident}),\n    props => ({flight_id: props.flight_id ? props.flight_id.trim() : null}),\n    props => ({timestamp: Date.parse(props.logged_date + \" \" + props.logged_time)}),\n    props => ({altitude: props.altitude}),\n    props => ({ground_speed: props.ground_speed}),\n    props => ({track: props.track}),\n    props => ({lat: props.lat}),\n    props => ({lon: props.lon}),\n    props => ({vertical_rate: props.vertical_rate})\n];\n\nmsg.payload = fns.map(f => f.call(this, msg.payload)).reduce((a,c)=> Object.assign(a,c), {});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 160,
        "wires": [
            [
                "e1c8d108.0f526"
            ]
        ]
    },
    {
        "id": "e9b077cd.45f108",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "update cache",
        "func": "flow.set(msg.payload.hex_ident, msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 400,
        "wires": [
            [
                "f6b5665b.4fac88"
            ]
        ]
    },
    {
        "id": "32a64cec.6fdd74",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "update cache entry",
        "func": "const assign_if = (target, source) => {\n    Object.keys(source).forEach(key => {\n        if(!!source[key]) {\n            target[key] = source[key];\n        }\n    })\n    return target;\n}\n\nconst known = flow.get(msg.payload.hex_ident) || {};\n\nif(known.timestamp && msg.payload.timestamp)\n    known.delta_t = msg.payload.timestamp - known.timestamp;\nelse\n    known.delta_t = 0;\n    \nif(known.track && msg.payload.track)\n    known.delta_track = Math.abs(msg.payload.track - known.track);\nelse\n    known.delta_track= 0;\n\nmsg.payload = assign_if(known, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "e9b077cd.45f108",
                "b6ad6c51.3946a"
            ]
        ]
    },
    {
        "id": "f6b5665b.4fac88",
        "type": "function",
        "z": "4f19d12f.1e2c4",
        "name": "detach",
        "func": "msg.payload = Object.assign({}, msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "7de6f7c3.2417a8"
            ]
        ]
    },
    {
        "id": "21d417f9.f35e28",
        "type": "worldmap in",
        "z": "440cd06f.70f26",
        "name": "",
        "path": "/worldmap",
        "events": "all",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "e2da32bb.db098"
            ]
        ]
    },
    {
        "id": "43fb731f.8bb12c",
        "type": "ui_worldmap",
        "z": "440cd06f.70f26",
        "group": "b7c4863.ef4c878",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "lat": "35.198284",
        "lon": " -111.651299",
        "zoom": "",
        "layer": "OSM",
        "cluster": "",
        "maxage": "20",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "x": 720,
        "y": 60,
        "wires": []
    },
    {
        "id": "8e0c34a3.373ec8",
        "type": "ui_switch",
        "z": "440cd06f.70f26",
        "name": "",
        "label": "Labels",
        "tooltip": "",
        "group": "87e7d73f.58b988",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "d77f72ea.f89fc"
            ]
        ]
    },
    {
        "id": "d77f72ea.f89fc",
        "type": "change",
        "z": "440cd06f.70f26",
        "name": "set labels",
        "rules": [
            {
                "t": "set",
                "p": "labels",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c85c2e14.e5154",
        "type": "switch",
        "z": "440cd06f.70f26",
        "name": "labels?",
        "property": "labels",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 180,
        "wires": [
            [
                "de00bbda.b59ec8"
            ],
            [
                "e0a1ff6b.edb8b"
            ]
        ],
        "outputLabels": [
            "use label",
            "use tooltip"
        ]
    },
    {
        "id": "e0a1ff6b.edb8b",
        "type": "change",
        "z": "440cd06f.70f26",
        "name": "tooltip",
        "rules": [
            {
                "t": "set",
                "p": "payload.tooltip",
                "pt": "msg",
                "to": "msg.payload.flight_id ? msg.payload.flight_id : msg.payload.hex_ident",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "43fb731f.8bb12c"
            ]
        ]
    },
    {
        "id": "de00bbda.b59ec8",
        "type": "change",
        "z": "440cd06f.70f26",
        "name": "label",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "msg.payload.flight_id ? msg.payload.flight_id : msg.payload.hex_ident",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "43fb731f.8bb12c"
            ]
        ]
    },
    {
        "id": "e2da32bb.db098",
        "type": "switch",
        "z": "440cd06f.70f26",
        "name": "action router",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connecct",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 420,
        "wires": [
            [
                "ecf80a0c.3955d8"
            ],
            [],
            []
        ],
        "outputLabels": [
            "on click",
            "on connect",
            "on disconnect"
        ]
    },
    {
        "id": "bae2d6dd.ffe6d8",
        "type": "function",
        "z": "440cd06f.70f26",
        "name": "popped?",
        "func": "const popped = flow.get('popped') || [];\nmsg.payload.popped = popped.includes(msg.payload.hex_ident);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 180,
        "wires": [
            [
                "c85c2e14.e5154"
            ]
        ]
    },
    {
        "id": "ecf80a0c.3955d8",
        "type": "function",
        "z": "440cd06f.70f26",
        "name": "set popped",
        "func": "let popped = flow.get('popped') || [];\nconst idx = popped.indexOf(msg.payload.name);\nif(idx < 0){\n    popped.push(msg.payload.name);\n}else{\n    popped.splice(idx, 1);\n}\nflow.set('popped', popped);\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b6ad6c51.3946a",
        "type": "debug",
        "z": "4f19d12f.1e2c4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "f71fd6b4.bf26c8",
        "type": "change",
        "z": "440cd06f.70f26",
        "name": "accuracy",
        "rules": [
            {
                "t": "set",
                "p": "payload.accuracy",
                "pt": "msg",
                "to": "15",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "bae2d6dd.ffe6d8"
            ]
        ]
    }
]