[
    {
        "id": "06f12ee94683dc5b",
        "type": "tab",
        "label": "decode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f2d18d1445b04b8f",
        "type": "tab",
        "label": "persist",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c1ee75866ab9c2b8",
        "type": "tab",
        "label": "view",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d3e93311623de37",
        "type": "tab",
        "label": "control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc38bbda0f6e9514",
        "type": "tab",
        "label": "http",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8007ce9591a9b027",
        "type": "function",
        "z": "06f12ee94683dc5b",
        "name": "-> byte array",
        "func": "var DecodeHexStringToByteArray = function (hexString) {\n   var result = [];\n   while (hexString.length >= 2) { \n       result.push(parseInt(hexString.substring(0, 2), 16));\n       hexString = hexString.substring(2, hexString.length);\n   }\n   return result;\n}\n\nconst hex = msg.payload.replace(/[^0-9^a-f^A-F]/g, \"\");\nconst payload = DecodeHexStringToByteArray(hex)\n\nreturn {payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 120,
        "wires": [
            [
                "1172ca092396f833",
                "e9acdfac9915dec6"
            ]
        ]
    },
    {
        "id": "1172ca092396f833",
        "type": "debug",
        "z": "06f12ee94683dc5b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 120,
        "wires": []
    },
    {
        "id": "03ec1d6930ad8845",
        "type": "debug",
        "z": "06f12ee94683dc5b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "c17aafa5d0448c44",
        "type": "debug",
        "z": "06f12ee94683dc5b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "f56aec8d3a5f9128",
        "type": "function",
        "z": "06f12ee94683dc5b",
        "name": "filter by crc",
        "func": "\nreturn msg.payload.crcOk ? msg : null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 240,
        "wires": [
            [
                "03ec1d6930ad8845",
                "bcc2139ff2e6b4e0"
            ]
        ]
    },
    {
        "id": "e9acdfac9915dec6",
        "type": "function",
        "z": "06f12ee94683dc5b",
        "name": "decode",
        "func": "\nmsg.payload = flow.get('decoder').parse(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('decoder', new modeSDecoder())\n",
        "finalize": "",
        "libs": [
            {
                "var": "modeSDecoder",
                "module": "mode-s-decoder"
            }
        ],
        "x": 140,
        "y": 180,
        "wires": [
            [
                "f56aec8d3a5f9128"
            ]
        ]
    },
    {
        "id": "5e37ff77cc785735",
        "type": "tcp in",
        "z": "06f12ee94683dc5b",
        "name": "adsb raw",
        "server": "client",
        "host": "192.168.12.227",
        "port": "8080",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "raw",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "8007ce9591a9b027",
                "c17aafa5d0448c44"
            ]
        ]
    },
    {
        "id": "bcc2139ff2e6b4e0",
        "type": "link out",
        "z": "06f12ee94683dc5b",
        "name": "adsb/decoded",
        "mode": "link",
        "links": [
            "333e5bd001d92ba7"
        ],
        "x": 445,
        "y": 360,
        "wires": []
    },
    {
        "id": "e11c90bfbdc8b848",
        "type": "debug",
        "z": "f2d18d1445b04b8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "a37effad043c3550",
        "type": "function",
        "z": "f2d18d1445b04b8f",
        "name": "read store",
        "func": "msg.payload = flow.get('aircraftStore').getAircrafts()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 220,
        "wires": [
            [
                "770e2f408de592b2"
            ]
        ]
    },
    {
        "id": "57f77045b9b9fd6b",
        "type": "inject",
        "z": "f2d18d1445b04b8f",
        "name": "trigger aircraft dump",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "a37effad043c3550"
            ]
        ]
    },
    {
        "id": "770e2f408de592b2",
        "type": "split",
        "z": "f2d18d1445b04b8f",
        "name": "per record",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "c0afeb1355d21b2b"
            ]
        ]
    },
    {
        "id": "4a582bc66cfad05b",
        "type": "debug",
        "z": "f2d18d1445b04b8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "c0afeb1355d21b2b",
        "type": "function",
        "z": "f2d18d1445b04b8f",
        "name": "filter empty callsign",
        "func": "\nreturn msg.payload.callsign ? msg : null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "e11c90bfbdc8b848",
                "e16ed4ce55e3e5c5"
            ]
        ]
    },
    {
        "id": "063101feea6a58d7",
        "type": "function",
        "z": "f2d18d1445b04b8f",
        "name": "aircraft store",
        "func": "flow.get('aircraftStore').addMessage(msg.payload)\n\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('aircraftStore', new modeSAircraftStore())\n",
        "finalize": "",
        "libs": [
            {
                "var": "modeSAircraftStore",
                "module": "mode-s-aircraft-store"
            }
        ],
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "333e5bd001d92ba7",
        "type": "link in",
        "z": "f2d18d1445b04b8f",
        "name": "link in 1",
        "links": [
            "bcc2139ff2e6b4e0"
        ],
        "x": 155,
        "y": 40,
        "wires": [
            [
                "4a582bc66cfad05b",
                "063101feea6a58d7"
            ]
        ]
    },
    {
        "id": "e16ed4ce55e3e5c5",
        "type": "link out",
        "z": "f2d18d1445b04b8f",
        "name": "aircraft",
        "mode": "link",
        "links": [
            "18b879a6685cf5b6"
        ],
        "x": 385,
        "y": 360,
        "wires": []
    },
    {
        "id": "61dd7bc080ea7765",
        "type": "change",
        "z": "c1ee75866ab9c2b8",
        "name": "set marker properties",
        "rules": [
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "aircraft",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.callsign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "cbdb62a880d63c0c"
            ]
        ]
    },
    {
        "id": "cbdb62a880d63c0c",
        "type": "function",
        "z": "c1ee75866ab9c2b8",
        "name": "set marker icon",
        "func": "const callsign = msg.payload.callsign;\n\nmsg.payload.icon = callsign.match('^N')\n    ? \"smallplane\"\n    : callsign.match(/^[A-Z]{3}/)\n    ? \"plane\"\n    : \"arrow\"\n\nmsg.payload.accuracy = 20 * Math.abs(msg.payload.delta.heading)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 320,
        "wires": [
            [
                "1657bf204946c34b",
                "05ebf27e4d1aa2de"
            ]
        ]
    },
    {
        "id": "c041eaecbfdf5e67",
        "type": "change",
        "z": "c1ee75866ab9c2b8",
        "name": "fix position",
        "rules": [
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "payload.lng",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.lng",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "1805ea9136bc7bb0"
            ]
        ]
    },
    {
        "id": "1805ea9136bc7bb0",
        "type": "function",
        "z": "c1ee75866ab9c2b8",
        "name": "calculate deltas",
        "func": "// get current info\nconst data = flow.get('data')\nconst current = {speed:msg.payload.speed, altitude:msg.payload.altitude, heading:msg.payload.heading, seen:msg.payload.seen}\nconst prev = data[msg.payload.icao] || current\nconst delta = {}\n\n// calc current info\nfor (var key in current) {\n    delta[key] = current[key] - prev[key];\n}\n\n// save current info\ndata[msg.payload.icao] = current\nflow.set('data', data)\n\n// update msg\nmsg.payload.delta = delta\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('data', {})",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 200,
        "wires": [
            [
                "61dd7bc080ea7765"
            ]
        ]
    },
    {
        "id": "1657bf204946c34b",
        "type": "worldmap",
        "z": "c1ee75866ab9c2b8",
        "name": "",
        "lat": "39.5",
        "lon": "-98.35",
        "zoom": "4",
        "layer": "EsriC",
        "cluster": "",
        "maxage": "60",
        "usermenu": "hide",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/flights",
        "overlist": "DR,AC,TL,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "939ad548affd7e37",
        "type": "link in",
        "z": "c1ee75866ab9c2b8",
        "name": "map control in",
        "links": [
            "cf9dee4085dafcf7"
        ],
        "x": 555,
        "y": 60,
        "wires": [
            [
                "1657bf204946c34b",
                "5f64c60cc642187b"
            ]
        ]
    },
    {
        "id": "8fb2d17b94e21892",
        "type": "debug",
        "z": "c1ee75866ab9c2b8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 60,
        "wires": []
    },
    {
        "id": "05ebf27e4d1aa2de",
        "type": "debug",
        "z": "c1ee75866ab9c2b8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 320,
        "wires": []
    },
    {
        "id": "5f64c60cc642187b",
        "type": "debug",
        "z": "c1ee75866ab9c2b8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "18b879a6685cf5b6",
        "type": "link in",
        "z": "c1ee75866ab9c2b8",
        "name": "link in 2",
        "links": [
            "e16ed4ce55e3e5c5"
        ],
        "x": 135,
        "y": 60,
        "wires": [
            [
                "8fb2d17b94e21892",
                "c041eaecbfdf5e67"
            ]
        ]
    },
    {
        "id": "cf9dee4085dafcf7",
        "type": "link out",
        "z": "2d3e93311623de37",
        "name": "map control out",
        "mode": "link",
        "links": [
            "939ad548affd7e37"
        ],
        "x": 635,
        "y": 140,
        "wires": []
    },
    {
        "id": "e4389b845b844e5a",
        "type": "change",
        "z": "2d3e93311623de37",
        "name": "set titlebar props",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":{\"toptitle\":\"ADS-B Flight Tracker\",\"toplogo\":\"/logo\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "cf9dee4085dafcf7"
            ]
        ]
    },
    {
        "id": "860b51f7584a7165",
        "type": "worldmap in",
        "z": "2d3e93311623de37",
        "name": "",
        "path": "/flights",
        "events": "connect,disconnect,point,layer,bounds,draw,other",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "9d5285bbd6933a23",
                "b27d83ecb799822a"
            ]
        ]
    },
    {
        "id": "9d5285bbd6933a23",
        "type": "switch",
        "z": "2d3e93311623de37",
        "name": "dispatch on action",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bounds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "disconnect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "layer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "addlayer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dellayer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "point",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 210,
        "y": 220,
        "wires": [
            [],
            [
                "e4389b845b844e5a"
            ],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "b27d83ecb799822a",
        "type": "debug",
        "z": "2d3e93311623de37",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "f0fe0bde2b4bb8c1",
        "type": "http in",
        "z": "bc38bbda0f6e9514",
        "name": "",
        "url": "/logo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "e04e200eeb0e623b"
            ]
        ]
    },
    {
        "id": "4e44bd1dda14be83",
        "type": "http response",
        "z": "bc38bbda0f6e9514",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "e04e200eeb0e623b",
        "type": "file in",
        "z": "bc38bbda0f6e9514",
        "name": "read logo",
        "filename": "/data/assets/airplane.png",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 280,
        "y": 60,
        "wires": [
            [
                "972034f9cea3701a"
            ]
        ]
    },
    {
        "id": "972034f9cea3701a",
        "type": "change",
        "z": "bc38bbda0f6e9514",
        "name": "set headers",
        "rules": [
            {
                "t": "set",
                "p": "payload.Content-Type",
                "pt": "msg",
                "to": "image/png",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 60,
        "wires": [
            [
                "4e44bd1dda14be83"
            ]
        ]
    }
]